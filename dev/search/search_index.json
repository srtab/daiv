{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>DAIV is an open-source automation assistant designed to enhance developer experience and productivity using AI agents. It integrates seamlessly with your repositories to streamline the development process. It can help you with:</p> <ul> <li>Planning and executing changes to your codebase based on your issues.</li> <li>Automatically responding to reviewer comments, adjusting code, and improving pull requests.</li> <li>Monitoring CI/CD logs and applying fixes automatically when a pipeline fails.</li> <li>Chatting with your codebase to get answers to your questions.</li> </ul>"},{"location":"#supported-git-platforms","title":"Supported Git Platforms","text":"<p>DAIV currently has support for the following Git platforms:</p> <ul> <li>GitLab</li> </ul> <p>GitHub is not supported yet</p> <p>GitHub is not supported yet but is planned for the future. Contributions are welcome!</p>"},{"location":"#how-it-works","title":"How it works","text":"<p>[WIP]</p>"},{"location":"community/","title":"Community","text":"<p>DAIV is a community-driven project. We greatly appreciate contributions from you. This document describes the different ways you can contribute to DAIV.</p>"},{"location":"community/#contributing","title":"Contributing","text":"<p>[WIP]</p>"},{"location":"community/#reporting-issues","title":"Reporting Issues","text":"<p>[WIP]</p>"},{"location":"configurations/","title":"Configurations","text":"<p>Customize DAIV for your repository using a <code>.daiv.yml</code> file.</p> <p>This file lets you control features, code formatting, and more.</p>"},{"location":"configurations/#example-configuration","title":"Example Configuration","text":"<p>Below is a complete example of a <code>.daiv.yml</code> file.</p> <p>You can copy and modify this template for your repository.</p> YAML<pre><code># Repository settings\ndefault_branch: main\nrepository_description: \"Python web application using Django and React. Follows PEP 8 standards and the Airbnb style guide for JavaScript.\"\nbranch_name_convention: \"Use 'feat/' for features, 'fix/' for bugfixes, 'docs/' for documentation\"\n\n# Feature toggles\nfeatures:\n  auto_address_review_enabled: true\n  auto_address_issues_enabled: true\n  autofix_pipeline_enabled: true\n\n# Code management\nextend_exclude_patterns:\n  - \"**/tests/**\"\n  - \"**/*.test.ts\"\n  - \"coverage/**\"\n  - \"*.min.js\"\n\n# Sandbox commands\ncommands:\n  base_image: \"python:3.12-alpine\"\n  install_dependencies: \"pip install -r requirements.txt\"\n  format_code: \"ruff check --fix &amp;&amp; ruff format\"\n</code></pre>"},{"location":"configurations/#configure-repository-settings","title":"Configure Repository Settings","text":"<p>Repository settings control the default branch, repository description, and branch naming convention.</p> Option Type Default Description <code>default_branch</code> <code>str | null</code> Repository default branch The branch DAIV uses by default to load the <code>.daiv.yml</code> file. <code>repository_description</code> <code>str</code> <code>\"\"</code> A brief description to help agents understand your repository. Max 400 chars. <code>branch_name_convention</code> <code>str</code> <code>\"always start with 'daiv/' followed by a short description.\"</code> Naming convention for generating pull request branches. <p>Tip</p> <ul> <li>Use clear and simple branch-naming conventions.</li> <li>Keep descriptions concise and informative.</li> </ul>"},{"location":"configurations/#enable-or-disable-features","title":"Enable or Disable Features","text":"<p>Control which DAIV features are active in your repository.</p> <p>Under your <code>.daiv.yml</code> file's <code>features:</code> section, configure the following keys:</p> Feature Type Default Description <code>auto_address_review_enabled</code> <code>bool</code> <code>true</code> Enable the code review addressor agent. <code>auto_address_issues_enabled</code> <code>bool</code> <code>true</code> Enable the issue addressor agent. <code>autofix_pipeline_enabled</code> <code>bool</code> <code>true</code> Enable the pipeline fixing agent. <p>Tip</p> <p>Disable features you do not need to reduce noise and speed up processing.</p>"},{"location":"configurations/#customize-code-indexing","title":"Customize Code Indexing","text":"<p>Control which files DAIV indexes for context.</p> <p>Warning</p> <p>Files excluded from indexing will not be available to DAIV's AI agents.</p> Option Type Default Description <code>extend_exclude_patterns</code> <code>list[str]</code> <code>[]</code> Add patterns to exclude more files from indexing. <code>exclude_patterns</code> <code>list[str]</code> <code>[\"*package-lock.json\", \"*.lock\", \"*.svg\", \"*.pyc\", \"*.log\", \"*.zip\", \"*.coverage\", \"*.sql\", \"**/.git/**\", \"**/.mypy_cache/**\", \"**/.tox/**\", \"**/vendor/**\", \"**/venv/**\", \"**/.venv/**\", \"**/.env/**\", \"**/node_modules/**\", \"**/dist/**\", \"**/__pycache__/**\", \"**/data/**\", \"**/.idea/**\", \"**/.pytest_cache/**\", \"**/.ruff_cache/**\"]</code> Override the default exclude patterns. <p>Tip</p> <p>Exclude sensitive files and build artifacts. Prefer using <code>extend_exclude_patterns</code> to add more patterns.</p>"},{"location":"configurations/#set-up-sandbox-commands","title":"Set Up Sandbox Commands","text":"<p>To use sandbox commands, you must have a <code>daiv-sandbox</code> instance running (see the daiv-sandbox repository for more information), and all three options below (<code>base_image</code>, <code>install_dependencies</code>, and <code>format_code</code>) must be set.</p> <p>Under your <code>.daiv.yml</code> file's <code>commands:</code> section, configure the following keys:</p> Option Type Default Description <code>base_image</code> <code>str</code> <code>null</code> Docker image for the sandbox. Use distro images only. <code>install_dependencies</code> <code>str</code> <code>null</code> Command to install project dependencies. <code>format_code</code> <code>str</code> <code>null</code> Command to format code before committing. <p>Here's how it works:</p> <p>Before committing code generated by DAIV, DAIV will call <code>daiv-sandbox</code> to:</p> <ul> <li>Create a container from the <code>base_image</code>.</li> <li>Execute the <code>install_dependencies</code> command in the container.</li> <li>Execute the <code>format_code</code> command in the container after the <code>install_dependencies</code> command executed successfully.</li> </ul> <p>Warning</p> <p>If any of the commands fail, DAIV will commit the code as is to be manually fixed, if needed.</p> <p>Tip</p> <p>Use specific image versions for reproducibility.</p>"},{"location":"getting-started/","title":"Getting Started","text":""},{"location":"getting-started/#installation","title":"Installation","text":"<p>[WIP]</p>"},{"location":"getting-started/#environment-variables","title":"Environment Variables","text":"<p>[WIP]</p>"},{"location":"getting-started/#usage","title":"Usage","text":"<p>[WIP]</p>"},{"location":"ai-agents/code-review-addressor/","title":"\ud83d\udcac Code Review Addressor","text":"<p>The Code Review Addressor is an AI agent that assists with code review comments. It provides context-aware answers or directly applies requested changes to the code. This reduces the overhead of going back and forth on merge requests.</p>"},{"location":"ai-agents/codebase-chat/","title":"\ud83e\udde0 Codebase Chat","text":"<p>The Codebase Chat is a feature that allows you to chat with your codebase. It is a ChatGPT-like experience to chat with your codebase and get answers.</p>"},{"location":"ai-agents/issue-addressor/","title":"\ud83d\ude80 Issue Addressor","text":"<p>The Issue Addressor is an AI agent that assists with issue implementation. It provides a step-by-step plan to address the issue. After the plan is approved, it can execute the code changes and open a merge request for you to review.</p>"},{"location":"ai-agents/pipeline-fixing/","title":"\ud83d\udd27 Pipeline Fixing","text":"<p>The Pipeline Fixer is an AI agent that troubleshoots failed pipelines and tries to fix them automatically.</p>"},{"location":"ai-agents/supported-providers/","title":"Supported Providers","text":"<p>DAIV currently has integrated support for the following providers:</p> <ul> <li>OpenRouter</li> <li>OpenAI</li> <li>Anthropic</li> <li>Gemini</li> </ul>"},{"location":"ai-agents/supported-providers/#openrouter","title":"OpenRouter","text":""},{"location":"ai-agents/supported-providers/#openai","title":"OpenAI","text":""},{"location":"ai-agents/supported-providers/#anthropic","title":"Anthropic","text":""},{"location":"ai-agents/supported-providers/#gemini","title":"Gemini","text":""}]}