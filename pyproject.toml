[project]
name = "daiv"
version = "0.1.0"
description = "AI-driven tool to enhance development productivity by automating routine tasks."
readme = "README.md"
license = { file = "LICENSE" }
maintainers = [
  { name = "Sandro Rodrigues", email = "srtabs@gmail.com" },
]
authors = [
  { name = "Sandro Rodrigues", email = "srtabs@gmail.com" },
]
requires-python = ">=3.12"
classifiers = [
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.12",
]
dependencies = [
  "celery[redis]==5.4",
  "chromadb==0.5.3",
  "django==5.1.1",
  "django-appconf==1.0.6",
  "django-celery-beat==2.7",
  "django-csp==3.8",
  "django-extensions==3.2.3",
  "django-ninja==1.3",
  "django-split-settings==1.3.2",
  "esprima==4.0.1",
  "get-docker-secret==2",
  "instructor==1.4.2",
  "ipython==8.28",
  "langchain==0.3.3",
  "langchain-anthropic==0.2.3",
  "langchain-chroma==0.1.4",
  "langchain-community==0.3.2",
  "langchain-openai==0.2.2",
  "langchain-text-splitters==0.3",
  "langgraph==0.2.38",
  "langgraph-checkpoint-postgres==2.0.1",
  "langsmith==0.1.135",
  "litellm==1.44.8",
  "openai==1.51.2",
  "psycopg[pool]==3.2.2",
  "pydantic==2.9.2",
  "python-decouple==3.8",
  "python-gitlab[graphql]==4.13",
  "redis==5.1.1",
  "sentence-transformers==3.1",
  "tantivy==0.22",
  "tree-sitter==0.21.3",
  "tree-sitter-languages==1.10.2",
  "unidiff==0.7.5",
  "uvicorn==0.31",
]

[tool.ruff]
target-version = "py312"
line-length = 120
extend-exclude = [ "*/node_modules/*", "*/static/*" ]

force-exclude = true
preview = true
show-fixes = true
format.skip-magic-trailing-comma = true
lint.select = [
  # flake8-builtins
  "A",
  # flake8-bugbear
  "B",
  # flake8-comprehensions
  "C4",
  # flake8-django
  "DJ",
  # pycodestyle
  "E",
  # eradicate
  "ERA",
  # Pyflakes
  "F",
  # flake8-logging-format
  "G",
  # isort
  "I",
  # flake8-logging
  "LOG",
  # pep8-naming
  "N",
  # flake8-use-pathlib
  "PTH",
  # flake8-bandit
  "S",
  # flake8-simplify
  "SIM",
  # flake8-print
  "T20",
  # flake8-type-checking
  "TCH",
  # pyupgrade
  "UP",
  # pycodestyle
  "W",
]
lint.ignore = [ "N812", "S101" ]
lint.isort.known-first-party = [
  "accounts",
  "automation",
  "codebase",
  "core",
]
lint.isort.section-order = [
  "future",
  "standard-library",
  "django",
  "third-party",
  "first-party",
  "local-folder",
]
lint.isort.sections."django" = [ "django" ]
lint.isort.split-on-trailing-comma = false

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "daiv.settings.test"
pythonpath = "daiv"
python_files = "test_*.py"
python_classes = "*Test"
addopts = "--cov --cov-config=.coveragerc"

[tool.pytest_env]
DJANGO_SETTINGS_MODULE = "daiv.settings.test"
DJANGO_SECRET_KEY = "not-so-secret"
DB_HOST = "db"
DB_NAME = "db"
DB_USER = "dbuser"
DB_PASSWORD = "dbpass"
DB_PORT = "5432"
DB_SSLMODE = "prefer"

[tool.mypy]
python_version = "3.12"
check_untyped_defs = true

[[tool.mypy.overrides]]
module = [
  "celery.*",
  "decouple.*",
  "django.*",
  "django_extensions.*",
  "litellm.*",
  "transformers.*",
  "unidiff.*",
  "redis.*",
]
ignore_missing_imports = true

[tool.uv]
dev-dependencies = [
  "coverage==7.6.1",
  "mypy==1.11.2",
  "pre-commit==4.0.0",
  "pyproject-fmt==2.2.4",
  "pyopenssl==24.2.1",
  "pytest-cov==5.0.0",
  "pytest-django==4.9.0",
  "pytest-env==1.1.5",
  "pytest-xdist==3.6.1",
  "ruff==0.6.9",
]
