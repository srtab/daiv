[project]
name = "daiv"
version = "0.3.0"
description = "AI Agents to automate code issues implementation, reviews, and pipeline repairs."
readme = "README.md"
license = { file = "LICENSE" }
maintainers = [
  { name = "Sandro Rodrigues", email = "srtabs@gmail.com" },
]
authors = [
  { name = "Sandro Rodrigues", email = "srtabs@gmail.com" },
]
requires-python = ">=3.14,<3.15"
classifiers = [
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.14",
]
dependencies = [
  "celery[redis]==5.5.3",
  "django==5.2.7",
  "django-extensions==4.1",
  "django-ninja==1.4.4",
  "django-split-settings==1.3.2",
  "duckduckgo-search==8.1.1",
  "get-docker-secret==2",
  "httpx==0.28.1",
  "ipython==9.6",
  "jinja2==3.1.6",
  "langchain[anthropic,community,google-genai,openai]==1.0.0",
  "langchain-mcp-adapters==0.1.11",
  "langgraph==1.0.0",
  "langgraph-checkpoint-postgres==2.0.25",
  "langsmith[pytest]==0.4.37",
  "psycopg[pool]==3.2.10",
  "pydantic==2.12.3",
  "pydantic-settings==2.11",
  "pygithub>=2.8.1",
  "python-decouple==3.8",
  "python-gitlab==6.5",
  "pyyaml==6.0.3",
  "redis==5.2.1",
  "sentry-sdk==2.42",
  "unidiff==0.7.5",
  "uvicorn[standard]==0.37",
]

urls.changelog = "https://github.com/srtab/daiv/blob/main/CHANGELOG.md"

urls.issues = "https://github.com/srtab/daiv/issues"
urls.source = "https://github.com/srtab/daiv"

[dependency-groups]
dev = [
  "coverage==7.11.0",
  "mypy==1.18.2",
  "openevals==0.1",
  "pre-commit==4.3",
  "pyopenssl==25.3",
  "pyproject-fmt==2.11",
  "pytest==8.4.2",
  "pytest-asyncio==1.2",
  "pytest-cov==7",
  "pytest-django==4.11.1",
  "pytest-env==1.2",
  "pytest-mock==3.15.1",
  "pytest-xdist==3.8",
  "python-dotenv==1.1.1",
  "ruff==0.14.1",
  "types-pyyaml==6.0.12.20250915",
  "watchdog==6",
]
docs = [
  "mike==2.1.3",
  "mkdocs==1.6.1",
  "mkdocs-git-revision-date-localized-plugin==1.4.7",
  "mkdocs-material==9.6.22",
]

[tool.uv]
default-groups = [ "docs", "dev" ]

[tool.ruff]
line-length = 120
extend-exclude = [ "*/node_modules/*", "*/static/*" ]
force-exclude = true
preview = true
unsafe-fixes = true

show-fixes = true
format.skip-magic-trailing-comma = true
lint.select = [
  # flake8-builtins
  "A",
  # flake8-bugbear
  "B",
  # flake8-comprehensions
  "C4",
  # flake8-django
  "DJ",
  # pycodestyle
  "E",
  # eradicate
  "ERA",
  # Pyflakes
  "F",
  # flake8-logging-format
  "G",
  # isort
  "I",
  # flake8-logging
  "LOG",
  # pep8-naming
  "N",
  # flake8-use-pathlib
  "PTH",
  # flake8-bandit
  "S",
  # flake8-simplify
  "SIM",
  # flake8-print
  "T20",
  # flake8-type-checking
  "TCH",
  # pyupgrade
  "UP",
  # pycodestyle
  "W",
]
lint.ignore = [ "N812", "S101" ]
lint.isort.known-first-party = [
  "accounts",
  "automation",
  "chat",
  "codebase",
  "core",
]
lint.isort.section-order = [
  "future",
  "standard-library",
  "django",
  "third-party",
  "first-party",
  "local-folder",
]
lint.isort.sections."django" = [ "django" ]
lint.isort.split-on-trailing-comma = false

[tool.pyproject-fmt]
keep_full_version = true

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "daiv.settings.test"
pythonpath = "daiv"
python_files = "test_*.py"
python_classes = "Test *Test"
addopts = "--cov --cov-config=.coveragerc -p no:warnings"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.pytest_env]
DJANGO_SETTINGS_MODULE = "daiv.settings.test"
DJANGO_SECRET_KEY = "not-so-secret"
ANTHROPIC_API_KEY = "anthropic-api-key"
OPENAI_API_KEY = "openai-api-key"
CODEBASE_GITLAB_WEBHOOK_SECRET = "gitlab-webhook-secret"
NINJA_SKIP_REGISTRY = true

[tool.mypy]
python_version = "3.14"
check_untyped_defs = true

[[tool.mypy.overrides]]
module = [
  "appconf.*",
  "celery.*",
  "chat.*",
  "decouple.*",
  "django.*",
  "django_extensions.*",
  "unidiff.*",
  "redis.*",
]
ignore_missing_imports = true
