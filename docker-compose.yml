x-app-defaults: &x_app_default
  build:
    context: ./
    dockerfile: ./docker/local/app/Dockerfile
  tty: true
  stdin_open: true
  restart: unless-stopped
  env_file:
    - docker/local/app/config.env
    - docker/local/app/config.secrets.env
  volumes:
    - ./data/static:/home/app/data/static
    - ./data/media:/home/app/data/media
    - ./data/mcp-proxy:/home/app/data/mcp-proxy
    - .:/home/app/src
  depends_on:
    db:
      condition: service_healthy
      restart: true
    redis:
      condition: service_healthy
      restart: true
    gitlab:
      condition: service_healthy
    sandbox:
      condition: service_healthy

services:
  db:
    image: postgres:17.6
    container_name: daiv-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: dbuser
      POSTGRES_PASSWORD: dbpass
      POSTGRES_DB: db
    volumes:
      - ./data/db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dbuser -d db"]
      interval: 10s
      timeout: 10s
      start_period: 30s
      retries: 5
    ports:
      - "5432:5432"

  redis:
    image: redis:latest
    command: redis-server --save "" --appendonly no
    restart: unless-stopped
    container_name: daiv-redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "6379:6379"

  app:
    <<: *x_app_default
    container_name: daiv-app
    command: sh /home/app/docker/start-app
    healthcheck:
      test: ["CMD", "curl", "-f", "-k", "https://localhost:8000/-/alive/"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "8000:8000"

  worker:
    <<: *x_app_default
    container_name: daiv-worker
    command: sh /home/app/docker/start-worker
    environment:
      - C_FORCE_ROOT=true
    ports: []

  gitlab:
    image: gitlab/gitlab-ce:latest
    container_name: daiv-gitlab
    restart: on-failure
    logging:
      driver: "none"
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'http://127.0.0.1:8929'
        gitlab_rails['gitlab_shell_ssh_port'] = 2224
    ports:
      - "8929:8929"
      - "2224:22"
    volumes:
      - "./data/gitlab/config:/etc/gitlab"
      - "./data/gitlab/logs:/var/log/gitlab"
      - "./data/gitlab/data:/var/opt/gitlab"

  gitlab-runner:
    image: gitlab/gitlab-runner:latest
    container_name: daiv-gitlab-runner
    restart: unless-stopped
    volumes:
      - ./docker/local/gitlab-runner/config.toml:/etc/gitlab-runner/config.toml
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      gitlab:
        condition: service_healthy

  sandbox:
    build:
      context: ./../daiv-sandbox
      args:
        DOCKER_GID: 999
    stdin_open: true
    restart: unless-stopped
    container_name: daiv-sandbox
    env_file:
      - ./docker/local/sandbox/config.env
    ports:
      - "8888:8000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./../daiv-sandbox/daiv_sandbox:/home/app/daiv_sandbox

  mcp-proxy:
    image: ghcr.io/tbxark/mcp-proxy:v0.39.1
    restart: unless-stopped
    container_name: daiv-mcp-proxy
    env_file:
      - docker/local/app/config.secrets.env
    environment:
      NODE_ENV: development
    volumes:
      - ./data/mcp-proxy:/config
    ports:
      - "9090:9090"
    depends_on:
      app:
        condition: service_healthy
        restart: true

  smee:
    build:
      context: ./
      dockerfile: ./docker/local/smee/Dockerfile
    container_name: daiv-smee
    restart: unless-stopped
    command: smee --url https://smee.io/GiX7tLSvzqK35HSy --target https://app:8000/api/codebase/callbacks/github/
    environment:
      NODE_TLS_REJECT_UNAUTHORIZED: 0
    depends_on:
      app:
        condition: service_healthy
        restart: true
